ANALYSIS {    

$ECHO NONE
$IO OUTPUT  GEOMETRY\LENSLESS\BASELINE_ANALYSIS.CSV +FILE(10)
$END
$SCR 1
150um cubic zirconia - testing analyses
$SCR 1
EMISSION (um), N_LENS, LENS_DIA (um), EFF (um), BFL (um), PDMS_CHAN_LENS (um), PDMS_LENS_DET (um), COAT_REFL , AIR_GAP (um), WD_PDMS, DET_RAD (um)
$SCR 1
\EM_WAVE.\, \N_LENS.\ , \LENS_DIA.\, \EFL.\ , \BFL.\ ,\PDMS_CHAN_LENS.\ , \PDMS_LENS_DET.\ , \COAT_REFL.\, \AIR_GAP.\, \WD_PDMS.\, \DET_RAD.\
$SCR 1
  FLUX VS AOI ON DETECTOR
  $SCR 1
  AOI, FLUX
$IO OUTPUT CLOSE
$ECHO
    
    !! ANGLE OF INCIDENCE ON DETECTOR
    HISTORY PX
    INTERSECTS DETECTOR INT_DET
    
    $ITER AOI 0 85 -18 TFLUX
    {
     ANGLE DETECTOR GT (AOI) SETHIGH  !! Store all paths GT angle in SETHIGH
     ANGLE DETECTOR LT (AOI+5) SETLOW  !! Store all paths LT angle+1 in SETLOW
     AND SETHIGH SETLOW SETALL !! Store all paths in SETALL that exist in both SETHIGH & SETLOW
     SUMMARY SETALL  !! Get flux information for all paths in SETALL
    
     $GRAB 'Total Flux' 0 1 TFLUX  !! Assign to TFLUX to be stored in iter.dis
     &REG TFLUX AOI
     
      $ECHO NONE
      $IO OUTPUT GEOMETRY\LENSLESS\BASELINE_ANALYSIS.CSV +FILE(10)
      $END
      $SCR 1
      \AOI.\, \TFLUX.\
      $IO OUTPUT CLOSE
      $ECHO
    }
        	  
    RETURN !! Ends PX mode
    DISPLAY ITER.DIS  !! TFLUX vs. TESTANGLE
    GRAPH 'Flux per Detector Position'
    RETURN

}

  $ECHO NONE
  $IO OUTPUT GEOMETRY\LENSLESS\BASELINE.CSV +FILE(10)
  $END
  $SCR 1
FRESNEL AVE, BARE COATING, EXTENDED SIMULATION FOR BASELINE FILE
  $SCR 1
EMISSION (um), FLUX_TOTAL, COAT_REFL, CHAN_WIDTH, AIR_GAP (um), WORKING_DISTANCE (um), DET_RAD (um), BASE_RAYS, THETA_CALC, THETA_RAYS

  $IO OUTPUT CLOSE
  $ECHO

LOOP_1 {  !! nested macros
                        
$ITER DET_RAD 10 500 -26 NUMBEROFRAYS 
  {  
  &REG DET_RAD
  CONSIDER ALL
  SYSTEM NEW
  RESET   
  
  !! Optical variables
  FRESNEL AVE
  FLUX_TOTAL=10000
  EM_WAVE=0.590       !! emission wavelength
  SPOT_SIZE=10
      
  !! Define units and wavelength
  UNITS MICRONS 'Watts" 
  WAVELENGTHS (EM_WAVE)*1000 NANOMETERS 

  !! Define media
  MEDIA ; 1.43     'PDMS' 
  MEDIA ; 1.44     'DOPED' 
  MEDIA ; 1.51     'GLASS'
  MEDIA ; 1.33     'WATER'
                      
  !! Including 
  SPLIT 1500 MONTECARLO       !! monte carlo simulation
  LEVEL 1000 OFF 
  FRESNEL AVE                 !! fresnel equation

  !! Coating properties
  COAT_REFL=-1!!R^2
  COAT_TRANS=1-(COAT_REFL)^2
  COATING PROPERTIES 0; 0 1 'TRANSMIT' 
  COATING PROPERTIES 0; 0 0 'ABSORB' 
  COATING PROPERTIES 0; 1 0 'REFLECT' 
  !!COATING PROPERTIES 0; (COAT_REFL) (COAT_TRANS) 'REFL_COAT' 
    
  !! Simulation Variables
  
  !! Chip variables
  CHIP_LENGTH=2000            !! Length and width of microchip
  PDMS_THICK_BOTTOM=300       !! Total thickness of PDMS adjacent/below the channels  
  GLASS_THICK=200             !! Total thickness of glass layer
  CHAN_WIDTH=25
  !!WD_PDMS=100
  AIR_GAP=2                   !! air gap beneath detector
  !!DET_RAD=100
   
  !! Bounding Surface 
  SURFACE 
  PLANE Z (WD_PDMS)+(AIR_GAP) 0 0 ELLIPSE (CHIP_LENGTH)/2 (CHIP_LENGTH)/2 'BoundingPlane' 
  !!PLOT SURFACE 

  !! Beginning of geometry modelling 
  ENT OBJ 
  
  !! Channel 
  PLANE Z 0 RECTANGLE (CHIP_LENGTH)/2.2 (CHAN_WIDTH)/2 'CHANNEL.TOP' 
  INTERFACE COATING BARE WATER PDMS 
  
  PLANE Z -(CHAN_WIDTH) RECTANGLE (CHIP_LENGTH)/2.2 (CHAN_WIDTH)/2 'CHANNEL.B0TTOM' 
  INTERFACE COATING BARE WATER PDMS 
  
  PLANE Y 0 RECTANGLE (CHAN_WIDTH)/2 (CHIP_LENGTH)/2.2 'CHANNEL.BACK' 
  INTERFACE COATING BARE WATER PDMS 
  SHIFT Z -(CHAN_WIDTH)/2 
  SHIFT Y (CHAN_WIDTH)/2 
  
  PLANE Y 0 RECTANGLE (CHAN_WIDTH)/2 (CHIP_LENGTH)/2.2 'CHANNEL.FRONT' 
  INTERFACE COATING BARE WATER PDMS 
  SHIFT Z -(CHAN_WIDTH)/2 
  SHIFT Y -(CHAN_WIDTH)/2 
  
  PLANE X 0 RECTANGLE (CHAN_WIDTH)/2 (CHAN_WIDTH)/2 'CHANNEL.RIGHT' 
  INTERFACE COATING BARE WATER PDMS 
  SHIFT X (CHIP_LENGTH)/2.2 
  SHIFT Z -(CHAN_WIDTH)/2 
  
  PLANE X 0 RECTANGLE (CHAN_WIDTH)/2 (CHAN_WIDTH)/2 'CHANNEL.LEFT' 
  INTERFACE COATING BARE WATER PDMS 
  SHIFT X -(CHIP_LENGTH)/2.2 
  SHIFT Z -(CHAN_WIDTH)/2  
 
  !! Glass-layer (substrate)
  TUBE Z -(PDMS_THICK_BOTTOM)  (CHIP_LENGTH)/2 (CHIP_LENGTH)/2 -(PDMS_THICK_BOTTOM)-(GLASS_THICK) (CHIP_LENGTH)/2 (CHIP_LENGTH)/2 0 0 'GLASS.SIDE' 
  INTERFACE COATING BARE GLASS AIR 
          
  PLANE Z -(PDMS_THICK_BOTTOM)-(GLASS_THICK) ELLIPSE (CHIP_LENGTH)/2 (CHIP_LENGTH)/2 'GLASS.BOTTOM' 
  INTERFACE COATING BARE GLASS AIR  
  
  !! PDMS-layer
  TUBE Z (WD_PDMS) (CHIP_LENGTH)/2 (CHIP_LENGTH)/2 -(PDMS_THICK_BOTTOM) (CHIP_LENGTH)/2 (CHIP_LENGTH)/2 0 0 'MANTEL.SIDE' 
  INTERFACE COATING BARE PDMS AIR 
  
  PLANE Z -(PDMS_THICK_BOTTOM) ELLIPSE (CHIP_LENGTH)/2 (CHIP_LENGTH)/2 'MANTEL.BOTTOM' 
  INTERFACE COATING BARE PDMS GLASS 
  
  !! Air Gap
  PLANE Z (WD_PDMS) ELLIPSE (CHIP_LENGTH)/2 (CHIP_LENGTH)/2 'AIR_GAP' 
  INTERFACE COATING BARE PDMS AIR 
  
  !! Detector 
  PLANE Z (WD_PDMS)+(AIR_GAP) ELLIPSE (DET_RAD) (DET_RAD) 'DETECTOR' 
  INTERFACE COATING ABSORB DOPED AIR     
  
  !!!!!!!!!!!!!!!!!!!
  RAYS 0 
  IMMERSE WATER             !! light source is inside the water 
      
  EMITTING SPHEROID 0 0 -(CHAN_WIDTH)/2 (SPOT_SIZE) (SPOT_SIZE) (SPOT_SIZE) (FLUX_TOTAL) 'FLUOROPHORE' ISO 
  FLUX TOTAL (FLUX_TOTAL) 
  WAVELENGTHS (EM_WAVE)*1000 NANOMETERS 
  HALT 10000 
  
    CONSIDER ALL 
    WINDOW Z X 
    SAVE 10
    TRACE PLOT OVERLAY
    PLOT FACETS 
    $VIEW 
    CONSIDER ONLY DETECTOR 
    STATS ALL      
    $GRAB 'TOTAL' 0 1 NUMBEROFRAYS
	
  !!!!!!!!!!!!!!!!!!!
                                                    
  THETA_CALC=ATAN[(DET_RAD)/((WD_PDMS)+(AIR_GAP))]
  THETA_RAYS=ACOS[1-(2*(NUMBEROFRAYS)/(FLUX_TOTAL))]
  
  !!WRITES TO TEXT FILE ON EACH PASS
  $ECHO NONE
  $IO OUTPUT GEOMETRY\LENSLESS\BASELINE.CSV +FILE(10)   !! ALL SUCCESSIVE ITERATIONS
  $END
  $SCR 1
\EM_WAVE.\, \FLUX_TOTAL.\, \COAT_REFL.\, \CHAN_WIDTH.\, \AIR_GAP.\, \WD_PDMS.\, \DET_RAD.\, \NUMBEROFRAYS.\, \THETA_CALC.\, \THETA_RAYS.\

  $IO OUTPUT CLOSE
  $ECHO
  
  }                         !!end of iteration loop

}

!!LOOP_2	{
  $ITER WD_PDMS 0 1000 -21  
  {
    &REG WD_PDMS
    $LOOP_1 ?
  }
!!}

!!LOOP_3	{
!!  $ITER CHAN_WIDTH 25 75 -5  
!!  {
!!    &REG CHAN_WIDTH 
!!    $LOOP_2 ?
!!  }
!!}

!!  $ITER COAT_REFL 0 1 -4  
!!  {
!!    &REG COAT_REFL 
!!    $LOOP_3 ?
!!  }
                            
RETURN

